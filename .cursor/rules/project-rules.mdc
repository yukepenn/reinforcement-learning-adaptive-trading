---
description: 
globs: 
alwaysApply: true
---
# Reinforcement Learning for Adaptive Trading (PPO Agent) — Project Rules

> Applies to files matching:
> ```
> **/*.py
> README.md
> requirements.txt
> .cursor/**/*.mdc
> config/**/*.yaml
> data/**
> environment/**/*.py
> features/**/*.py
> models/**
> logs/**
> utils/**/*.py
> training/**/*.py
> evaluation/**/*.py
> ```

---

## 1. Project Structure

/
├── config/config.yaml
├── data/
│ ├── raw/
│ └── processed/
├── environment/trading_env.py
├── features/feature_engineering.py
├── models/ # saved .zip models
├── logs/ # training/eval logs
├── utils/
│ ├── data_utils.py
│ ├── config_utils.py
│ ├── logging_utils.py
│ └── metrics.py
├── training/train.py
├── evaluation/evaluate.py
├── README.md
└── requirements.txt

markdown
Copy
Edit

Each folder/file has a single, well-defined responsibility.

---

## 2. Coding Conventions

- **PEP8**: 4-space indent, max 88 chars.
- **Naming**: `snake_case` for modules/vars, `PascalCase` for classes.
- **Docstrings**: Google style on every module, class, and function.
- **Imports**: grouped (`stdlib` → `third-party` → `local`), alphabetized.

---

## 3. Documentation & Dependencies

- **README.md** must include:
  1. Project overview & objectives  
  2. Setup (`pip install -r requirements.txt`)  
  3. Execution steps  
     ```bash
     python training/train.py
     python evaluation/evaluate.py
     ```  
  4. Key outputs summary (model path, logs location, metrics).

- **requirements.txt**: Pin versions, e.g.:
gymnasium==0.28.1
stable-baselines3[extra]==2.0.0a5
torch==2.0.1
numpy==1.25.0
pandas==2.1.0
pyyaml==6.0
scikit-learn==1.2.2
matplotlib==3.8.0
shap==0.42.1

yaml
Copy
Edit

---

## 4. Logging & Error Handling

- **Logging**:  
- Use Python's `logging` at INFO level.  
- Configure via `utils/logging_utils.setup_logging()`.  
- Acquire loggers with `logger = logging.getLogger(__name__)`.

- **Error Handling**:  
- Wrap I/O (file, APIs) in `try/except`.  
- On exception, use `logger.exception("…")`.  
- Avoid bare excepts.

---

## 5. Version Control Rules

- **.gitignore** must cover:
pycache/
*.py[cod]
data/raw/
data/processed/
models/
logs/
.cursor/

markdown
Copy
Edit

- **Commits**: Conventional style (`feat:`, `fix:`, `docs:`, etc.),  
subject ≤50 chars, body wrapped at 72 chars.

---

## 6. Brief File Responsibilities

| File                              | Purpose                                             |
|-----------------------------------|-----------------------------------------------------|
| `config/config.yaml`              | All experiment parameters                          |
| `data/raw/*`                      | Source CSV data (ignored by Git)                   |
| `data/processed/*`                | Processed features (ignored by Git)                 |
| `environment/trading_env.py`      | Gymnasium Env: state/action/reward logic            |
| `features/feature_engineering.py` | Compute & scale input features                      |
| `utils/data_utils.py`             | Load/split/cache datasets                           |
| `utils/config_utils.py`           | Parse & validate YAML config                        |
| `utils/logging_utils.py`          | Setup logging (file + console)                      |
| `utils/metrics.py`                | Compute Sharpe, drawdown, returns, etc.             |
| `training/train.py`               | Orchestrates data prep → env → PPO training → save  |
| `evaluation/evaluate.py`          | Load model → run test episodes → log metrics        |
| `README.md`                       | Overview, setup, usage, output summary              |
| `requirements.txt`                | Pinned Python dependencies                          |


